- if !@attachments.empty?
  h1 Listing attachments

  table.list-model
    thead
      tr
        th ID
        th Name
        th File
        th Type
        th
        th

    tbody
      - @attachments.each do |a|
        tr
          td.mono
            = a.id.to_s
          td = link_to a.name, a
          td
            - if a.fyle.blank?
              | N/A
            - elsif content_rmatch a.fyle.file.content_type, :image
              / We'd like to have a real thumbnail displayed, but the way
              / carrierwave works now, we cannot easily do this, as there is no
              / mechanism to check the file content type from the
              / CarrierWave::Uploader::Base class. Thus, as we cannot process
              / thumbnails for attachments (which use the FileUploader, which is
              / designed to be a generic file uploader), we display the full
              / image here, but for UI purposes, limit it to 50x50.
              = image_tag a.fyle_url, size: "50x50"
            - else
              = binary_file_view(a, :fyle)
          td
            - if a.fyle_type.nil?
              | N/A
            - else
              = BINARY_TYPES_HASH[a.fyle_type]
          td = link_to 'Edit', edit_attachment_path(a)
          td = link_to 'Destroy', a, data: {:confirm => 'Are you sure?'}, :method => :delete

  br

= link_to 'New Attachment', new_attachment_path
